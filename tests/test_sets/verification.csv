question,answer,evaluation_type
Verify if the automaton can always stay in state q_6 for up to 45 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_6 for up to 45 time units."", ""uppaal_query"": ""A[] s.s.q_6 && s.x <= 45""",verification
Verify if the automaton can always stay in state q_14 for up to 35 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_14 for up to 35 time units."", ""uppaal_query"": ""A[] s.s.q_14 && s.x <= 35""",verification
Does a path where state q_1 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_1 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_1""",verification
Does the system will always eventually reach state q_4.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_4."", ""uppaal_query"": ""A<> s.s.q_4""",verification
"If the system reaches q_10, will it eventually be in q_1?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_10, will it eventually be in q_1?"", ""uppaal_query"": ""s.s.q_10 --> s.s.q_1""",verification
Does a path where state q_2 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_2 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_2""",verification
Check if state q_3 is reachable within 30 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_3 is reachable within 30 time units."", ""uppaal_query"": ""E<> s.s.q_3 && s.x <= 30""",verification
Does a path where the system stays in state q_1 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_1 forever exist?"", ""uppaal_query"": ""E[] s.s.q_1""",verification
Does the system will always eventually reach state q_3.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_3."", ""uppaal_query"": ""A<> s.s.q_3""",verification
Does a path where state q_1 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_1 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_1""",verification
Verify if the automaton reaches the states q_8 and q_1.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_8 and q_1."", ""uppaal_query"": ""E<> (s.s.q_8 && s.s.q_1)""",verification
Verify if the automaton reaches the states q_8 and q_9.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_8 and q_9."", ""uppaal_query"": ""E<> (s.s.q_8 && s.s.q_9)""",verification
Verify if the automaton reaches the states q_11 and q_14.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_11 and q_14."", ""uppaal_query"": ""E<> (s.s.q_11 && s.s.q_14)""",verification
Check if state q_12 is reachable within 30 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_12 is reachable within 30 time units."", ""uppaal_query"": ""E<> s.s.q_12 && s.x <= 30""",verification
Verify if the automaton can always stay in state q_0 for up to 20 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_0 for up to 20 time units."", ""uppaal_query"": ""A[] s.s.q_0 && s.x <= 20""",verification
Verify if the automaton can always stay in state q_14 for up to 10 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_14 for up to 10 time units."", ""uppaal_query"": ""A[] s.s.q_14 && s.x <= 10""",verification
Verify if the automaton reaches the states q_2 and q_12.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_2 and q_12."", ""uppaal_query"": ""E<> (s.s.q_2 && s.s.q_12)""",verification
Verify if the automaton reaches the states q_4 and q_12.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_4 and q_12."", ""uppaal_query"": ""E<> (s.s.q_4 && s.s.q_12)""",verification
"If the system reaches q_13, will it eventually be in q_11?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_13, will it eventually be in q_11?"", ""uppaal_query"": ""s.s.q_13 --> s.s.q_11""",verification
Does a path where the system stays in state q_14 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_14 forever exist?"", ""uppaal_query"": ""E[] s.s.q_14""",verification
Does a path where the system stays in state q_4 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_4 forever exist?"", ""uppaal_query"": ""E[] s.s.q_4""",verification
Verify if the automaton can always stay in state q_9 for up to 50 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_9 for up to 50 time units."", ""uppaal_query"": ""A[] s.s.q_9 && s.x <= 50""",verification
Does the system will always eventually reach state q_13.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_13."", ""uppaal_query"": ""A<> s.s.q_13""",verification
Does the system will always eventually reach state q_1.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_1."", ""uppaal_query"": ""A<> s.s.q_1""",verification
"If the system reaches q_10, will it eventually be in q_14?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_10, will it eventually be in q_14?"", ""uppaal_query"": ""s.s.q_10 --> s.s.q_14""",verification
Does a path where the system stays in state q_12 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_12 forever exist?"", ""uppaal_query"": ""E[] s.s.q_12""",verification
Check if state q_13 is reachable within 45 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_13 is reachable within 45 time units."", ""uppaal_query"": ""E<> s.s.q_13 && s.x <= 45""",verification
"If the system reaches q_7, will it eventually be in q_12?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_7, will it eventually be in q_12?"", ""uppaal_query"": ""s.s.q_7 --> s.s.q_12""",verification
"If the system reaches q_2, will it eventually be in q_13?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_2, will it eventually be in q_13?"", ""uppaal_query"": ""s.s.q_2 --> s.s.q_13""",verification
Does the system will always eventually reach state q_7.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_7."", ""uppaal_query"": ""A<> s.s.q_7""",verification
Does the system will always eventually reach state q_11.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_11."", ""uppaal_query"": ""A<> s.s.q_11""",verification
"If the system reaches q_9, will it eventually be in q_12?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_9, will it eventually be in q_12?"", ""uppaal_query"": ""s.s.q_9 --> s.s.q_12""",verification
Verify if the automaton can always stay in state q_10 for up to 25 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_10 for up to 25 time units."", ""uppaal_query"": ""A[] s.s.q_10 && s.x <= 25""",verification
Verify if the automaton can always stay in state q_12 for up to 10 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_12 for up to 10 time units."", ""uppaal_query"": ""A[] s.s.q_12 && s.x <= 10""",verification
Check if state q_7 is reachable within 20 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_7 is reachable within 20 time units."", ""uppaal_query"": ""E<> s.s.q_7 && s.x <= 20""",verification
Does a path where the system stays in state q_7 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_7 forever exist?"", ""uppaal_query"": ""E[] s.s.q_7""",verification
Check if state q_0 is reachable within 30 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_0 is reachable within 30 time units."", ""uppaal_query"": ""E<> s.s.q_0 && s.x <= 30""",verification
Verify if the automaton reaches the states q_2 and q_10.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_2 and q_10."", ""uppaal_query"": ""E<> (s.s.q_2 && s.s.q_10)""",verification
Does a path where the system stays in state q_2 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_2 forever exist?"", ""uppaal_query"": ""E[] s.s.q_2""",verification
Does a path where the system stays in state q_6 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_6 forever exist?"", ""uppaal_query"": ""E[] s.s.q_6""",verification
Does a path where state q_8 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_8 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_8""",verification
Does a path where state q_8 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_8 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_8""",verification
Does a path where state q_10 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_10 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_10""",verification
Check if state q_10 is reachable within 10 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_10 is reachable within 10 time units."", ""uppaal_query"": ""E<> s.s.q_10 && s.x <= 10""",verification
Does a path where the system stays in state q_5 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_5 forever exist?"", ""uppaal_query"": ""E[] s.s.q_5""",verification
Does the system will always eventually reach state q_11.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_11."", ""uppaal_query"": ""A<> s.s.q_11""",verification
Check if state q_0 is reachable within 20 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_0 is reachable within 20 time units."", ""uppaal_query"": ""E<> s.s.q_0 && s.x <= 20""",verification
Verify if the automaton reaches the states q_2 and q_11.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_2 and q_11."", ""uppaal_query"": ""E<> (s.s.q_2 && s.s.q_11)""",verification
Does a path where the system stays in state q_14 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_14 forever exist?"", ""uppaal_query"": ""E[] s.s.q_14""",verification
Does the system will always eventually reach state q_0.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_0."", ""uppaal_query"": ""A<> s.s.q_0""",verification
Does the system will always eventually reach state q_10.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_10."", ""uppaal_query"": ""A<> s.s.q_10""",verification
Does a path where state q_10 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_10 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_10""",verification
Verify if the automaton can always stay in state q_4 for up to 40 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_4 for up to 40 time units."", ""uppaal_query"": ""A[] s.s.q_4 && s.x <= 40""",verification
Verify if the automaton can always stay in state q_0 for up to 10 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_0 for up to 10 time units."", ""uppaal_query"": ""A[] s.s.q_0 && s.x <= 10""",verification
Verify if the automaton reaches the states q_13 and q_1.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_13 and q_1."", ""uppaal_query"": ""E<> (s.s.q_13 && s.s.q_1)""",verification
"If the system reaches q_13, will it eventually be in q_10?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_13, will it eventually be in q_10?"", ""uppaal_query"": ""s.s.q_13 --> s.s.q_10""",verification
Check if state q_5 is reachable within 15 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_5 is reachable within 15 time units."", ""uppaal_query"": ""E<> s.s.q_5 && s.x <= 15""",verification
Verify if the automaton can always stay in state q_6 for up to 50 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_6 for up to 50 time units."", ""uppaal_query"": ""A[] s.s.q_6 && s.x <= 50""",verification
Does a path where the system stays in state q_3 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_3 forever exist?"", ""uppaal_query"": ""E[] s.s.q_3""",verification
Does a path where the system stays in state q_14 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_14 forever exist?"", ""uppaal_query"": ""E[] s.s.q_14""",verification
Verify if the automaton reaches the states q_4 and q_11.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_4 and q_11."", ""uppaal_query"": ""E<> (s.s.q_4 && s.s.q_11)""",verification
Does a path where the system stays in state q_4 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_4 forever exist?"", ""uppaal_query"": ""E[] s.s.q_4""",verification
"If the system reaches q_12, will it eventually be in q_10?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_12, will it eventually be in q_10?"", ""uppaal_query"": ""s.s.q_12 --> s.s.q_10""",verification
Does the system will always eventually reach state q_0.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_0."", ""uppaal_query"": ""A<> s.s.q_0""",verification
Check if state q_5 is reachable within 50 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_5 is reachable within 50 time units."", ""uppaal_query"": ""E<> s.s.q_5 && s.x <= 50""",verification
Does a path where state q_5 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_5 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_5""",verification
"If the system reaches q_10, will it eventually be in q_5?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_10, will it eventually be in q_5?"", ""uppaal_query"": ""s.s.q_10 --> s.s.q_5""",verification
Does a path where state q_14 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_14 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_14""",verification
Verify if the automaton reaches the states q_1 and q_9.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_1 and q_9."", ""uppaal_query"": ""E<> (s.s.q_1 && s.s.q_9)""",verification
Does a path where state q_8 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_8 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_8""",verification
"If the system reaches q_6, will it eventually be in q_0?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_6, will it eventually be in q_0?"", ""uppaal_query"": ""s.s.q_6 --> s.s.q_0""",verification
Does a path where the system stays in state q_1 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_1 forever exist?"", ""uppaal_query"": ""E[] s.s.q_1""",verification
Check if state q_12 is reachable within 30 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_12 is reachable within 30 time units."", ""uppaal_query"": ""E<> s.s.q_12 && s.x <= 30""",verification
Check if state q_11 is reachable within 15 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_11 is reachable within 15 time units."", ""uppaal_query"": ""E<> s.s.q_11 && s.x <= 15""",verification
Does the system will always eventually reach state q_11.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_11."", ""uppaal_query"": ""A<> s.s.q_11""",verification
Does the system will always eventually reach state q_9.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_9."", ""uppaal_query"": ""A<> s.s.q_9""",verification
Does a path where state q_7 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_7 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_7""",verification
Check if state q_6 is reachable within 15 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_6 is reachable within 15 time units."", ""uppaal_query"": ""E<> s.s.q_6 && s.x <= 15""",verification
Check if state q_13 is reachable within 15 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_13 is reachable within 15 time units."", ""uppaal_query"": ""E<> s.s.q_13 && s.x <= 15""",verification
Does a path where state q_8 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_8 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_8""",verification
Verify if the automaton reaches the states q_4 and q_0.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_4 and q_0."", ""uppaal_query"": ""E<> (s.s.q_4 && s.s.q_0)""",verification
Does the system will always eventually reach state q_4.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_4."", ""uppaal_query"": ""A<> s.s.q_4""",verification
Verify if the automaton can always stay in state q_1 for up to 30 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_1 for up to 30 time units."", ""uppaal_query"": ""A[] s.s.q_1 && s.x <= 30""",verification
Does the system will always eventually reach state q_1.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_1."", ""uppaal_query"": ""A<> s.s.q_1""",verification
Does a path where state q_10 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_10 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_10""",verification
Verify if the automaton reaches the states q_7 and q_12.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_7 and q_12."", ""uppaal_query"": ""E<> (s.s.q_7 && s.s.q_12)""",verification
Verify if the automaton can always stay in state q_12 for up to 10 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_12 for up to 10 time units."", ""uppaal_query"": ""A[] s.s.q_12 && s.x <= 10""",verification
Verify if the automaton can always stay in state q_8 for up to 50 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_8 for up to 50 time units."", ""uppaal_query"": ""A[] s.s.q_8 && s.x <= 50""",verification
Does the system will always eventually reach state q_14.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_14."", ""uppaal_query"": ""A<> s.s.q_14""",verification
Verify if the automaton can always stay in state q_0 for up to 25 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_0 for up to 25 time units."", ""uppaal_query"": ""A[] s.s.q_0 && s.x <= 25""",verification
Does a path where state q_6 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_6 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_6""",verification
Check if state q_3 is reachable within 35 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_3 is reachable within 35 time units."", ""uppaal_query"": ""E<> s.s.q_3 && s.x <= 35""",verification
Check if state q_2 is reachable within 45 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_2 is reachable within 45 time units."", ""uppaal_query"": ""E<> s.s.q_2 && s.x <= 45""",verification
Does a path where the system stays in state q_11 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_11 forever exist?"", ""uppaal_query"": ""E[] s.s.q_11""",verification
Does the system will always eventually reach state q_4.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_4."", ""uppaal_query"": ""A<> s.s.q_4""",verification
Check if state q_10 is reachable within 10 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_10 is reachable within 10 time units."", ""uppaal_query"": ""E<> s.s.q_10 && s.x <= 10""",verification
Check if state q_9 is reachable within 30 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_9 is reachable within 30 time units."", ""uppaal_query"": ""E<> s.s.q_9 && s.x <= 30""",verification
"If the system reaches q_7, will it eventually be in q_1?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_7, will it eventually be in q_1?"", ""uppaal_query"": ""s.s.q_7 --> s.s.q_1""",verification
Does a path where the system stays in state q_3 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_3 forever exist?"", ""uppaal_query"": ""E[] s.s.q_3""",verification
Verify if the automaton reaches the states q_14 and q_9.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_14 and q_9."", ""uppaal_query"": ""E<> (s.s.q_14 && s.s.q_9)""",verification
Verify if the automaton can always stay in state q_1 for up to 15 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_1 for up to 15 time units."", ""uppaal_query"": ""A[] s.s.q_1 && s.x <= 15""",verification
Does a path where state q_0 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_0 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_0""",verification
Verify if the automaton can always stay in state q_5 for up to 50 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_5 for up to 50 time units."", ""uppaal_query"": ""A[] s.s.q_5 && s.x <= 50""",verification
Does a path where the system stays in state q_4 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_4 forever exist?"", ""uppaal_query"": ""E[] s.s.q_4""",verification
Does a path where the system stays in state q_11 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_11 forever exist?"", ""uppaal_query"": ""E[] s.s.q_11""",verification
Verify if the automaton can always stay in state q_4 for up to 25 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_4 for up to 25 time units."", ""uppaal_query"": ""A[] s.s.q_4 && s.x <= 25""",verification
Does a path where state q_8 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_8 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_8""",verification
Does a path where state q_2 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_2 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_2""",verification
Verify if the automaton can always stay in state q_7 for up to 15 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_7 for up to 15 time units."", ""uppaal_query"": ""A[] s.s.q_7 && s.x <= 15""",verification
Does a path where state q_13 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_13 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_13""",verification
Does the system will always eventually reach state q_14.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_14."", ""uppaal_query"": ""A<> s.s.q_14""",verification
Check if state q_13 is reachable within 30 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_13 is reachable within 30 time units."", ""uppaal_query"": ""E<> s.s.q_13 && s.x <= 30""",verification
Check if state q_13 is reachable within 20 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_13 is reachable within 20 time units."", ""uppaal_query"": ""E<> s.s.q_13 && s.x <= 20""",verification
Does a path where the system stays in state q_2 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_2 forever exist?"", ""uppaal_query"": ""E[] s.s.q_2""",verification
"If the system reaches q_0, will it eventually be in q_11?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_0, will it eventually be in q_11?"", ""uppaal_query"": ""s.s.q_0 --> s.s.q_11""",verification
Does the system will always eventually reach state q_13.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_13."", ""uppaal_query"": ""A<> s.s.q_13""",verification
"If the system reaches q_6, will it eventually be in q_1?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_6, will it eventually be in q_1?"", ""uppaal_query"": ""s.s.q_6 --> s.s.q_1""",verification
"If the system reaches q_6, will it eventually be in q_7?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_6, will it eventually be in q_7?"", ""uppaal_query"": ""s.s.q_6 --> s.s.q_7""",verification
Verify if the automaton can always stay in state q_5 for up to 25 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_5 for up to 25 time units."", ""uppaal_query"": ""A[] s.s.q_5 && s.x <= 25""",verification
"If the system reaches q_4, will it eventually be in q_14?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_4, will it eventually be in q_14?"", ""uppaal_query"": ""s.s.q_4 --> s.s.q_14""",verification
Does the system will always eventually reach state q_12.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_12."", ""uppaal_query"": ""A<> s.s.q_12""",verification
"If the system reaches q_5, will it eventually be in q_4?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_5, will it eventually be in q_4?"", ""uppaal_query"": ""s.s.q_5 --> s.s.q_4""",verification
Verify if the automaton can always stay in state q_4 for up to 30 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_4 for up to 30 time units."", ""uppaal_query"": ""A[] s.s.q_4 && s.x <= 30""",verification
Check if state q_5 is reachable within 10 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_5 is reachable within 10 time units."", ""uppaal_query"": ""E<> s.s.q_5 && s.x <= 10""",verification
Does a path where the system stays in state q_12 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_12 forever exist?"", ""uppaal_query"": ""E[] s.s.q_12""",verification
"If the system reaches q_9, will it eventually be in q_2?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_9, will it eventually be in q_2?"", ""uppaal_query"": ""s.s.q_9 --> s.s.q_2""",verification
"If the system reaches q_14, will it eventually be in q_8?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_14, will it eventually be in q_8?"", ""uppaal_query"": ""s.s.q_14 --> s.s.q_8""",verification
Verify if the automaton can always stay in state q_6 for up to 20 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_6 for up to 20 time units."", ""uppaal_query"": ""A[] s.s.q_6 && s.x <= 20""",verification
Does the system will always eventually reach state q_0.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_0."", ""uppaal_query"": ""A<> s.s.q_0""",verification
Verify if the automaton reaches the states q_6 and q_14.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_6 and q_14."", ""uppaal_query"": ""E<> (s.s.q_6 && s.s.q_14)""",verification
Does a path where state q_13 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_13 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_13""",verification
Does a path where the system stays in state q_6 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_6 forever exist?"", ""uppaal_query"": ""E[] s.s.q_6""",verification
Does a path where state q_4 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_4 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_4""",verification
Verify if the automaton can always stay in state q_6 for up to 45 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_6 for up to 45 time units."", ""uppaal_query"": ""A[] s.s.q_6 && s.x <= 45""",verification
Does a path where state q_11 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_11 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_11""",verification
Does a path where state q_2 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_2 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_2""",verification
Does the system will always eventually reach state q_9.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_9."", ""uppaal_query"": ""A<> s.s.q_9""",verification
Verify if the automaton can always stay in state q_7 for up to 20 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_7 for up to 20 time units."", ""uppaal_query"": ""A[] s.s.q_7 && s.x <= 20""",verification
Does a path where state q_6 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_6 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_6""",verification
Does a path where the system stays in state q_6 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_6 forever exist?"", ""uppaal_query"": ""E[] s.s.q_6""",verification
Does the system will always eventually reach state q_8.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_8."", ""uppaal_query"": ""A<> s.s.q_8""",verification
Does a path where the system stays in state q_9 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_9 forever exist?"", ""uppaal_query"": ""E[] s.s.q_9""",verification
Does a path where the system stays in state q_5 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_5 forever exist?"", ""uppaal_query"": ""E[] s.s.q_5""",verification
Check if state q_7 is reachable within 10 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_7 is reachable within 10 time units."", ""uppaal_query"": ""E<> s.s.q_7 && s.x <= 10""",verification
Does a path where state q_12 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_12 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_12""",verification
Verify if the automaton reaches the states q_9 and q_6.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_9 and q_6."", ""uppaal_query"": ""E<> (s.s.q_9 && s.s.q_6)""",verification
Does the system will always eventually reach state q_12.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_12."", ""uppaal_query"": ""A<> s.s.q_12""",verification
Verify if the automaton can always stay in state q_14 for up to 30 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_14 for up to 30 time units."", ""uppaal_query"": ""A[] s.s.q_14 && s.x <= 30""",verification
Check if state q_2 is reachable within 45 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_2 is reachable within 45 time units."", ""uppaal_query"": ""E<> s.s.q_2 && s.x <= 45""",verification
Does a path where the system stays in state q_0 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_0 forever exist?"", ""uppaal_query"": ""E[] s.s.q_0""",verification
Verify if the automaton can always stay in state q_14 for up to 30 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_14 for up to 30 time units."", ""uppaal_query"": ""A[] s.s.q_14 && s.x <= 30""",verification
Does a path where the system stays in state q_11 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_11 forever exist?"", ""uppaal_query"": ""E[] s.s.q_11""",verification
Does a path where the system stays in state q_0 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_0 forever exist?"", ""uppaal_query"": ""E[] s.s.q_0""",verification
Verify if the automaton reaches the states q_2 and q_8.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_2 and q_8."", ""uppaal_query"": ""E<> (s.s.q_2 && s.s.q_8)""",verification
Does a path where state q_14 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_14 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_14""",verification
Does the system will always eventually reach state q_6.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_6."", ""uppaal_query"": ""A<> s.s.q_6""",verification
Does the system will always eventually reach state q_13.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_13."", ""uppaal_query"": ""A<> s.s.q_13""",verification
Does a path where the system stays in state q_13 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_13 forever exist?"", ""uppaal_query"": ""E[] s.s.q_13""",verification
Does the system will always eventually reach state q_0.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_0."", ""uppaal_query"": ""A<> s.s.q_0""",verification
Check if state q_14 is reachable within 25 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_14 is reachable within 25 time units."", ""uppaal_query"": ""E<> s.s.q_14 && s.x <= 25""",verification
Does the system will always eventually reach state q_14.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_14."", ""uppaal_query"": ""A<> s.s.q_14""",verification
"If the system reaches q_1, will it eventually be in q_7?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_1, will it eventually be in q_7?"", ""uppaal_query"": ""s.s.q_1 --> s.s.q_7""",verification
Verify if the automaton reaches the states q_2 and q_0.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_2 and q_0."", ""uppaal_query"": ""E<> (s.s.q_2 && s.s.q_0)""",verification
Does a path where the system stays in state q_13 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_13 forever exist?"", ""uppaal_query"": ""E[] s.s.q_13""",verification
Verify if the automaton reaches the states q_6 and q_3.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_6 and q_3."", ""uppaal_query"": ""E<> (s.s.q_6 && s.s.q_3)""",verification
"If the system reaches q_12, will it eventually be in q_2?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_12, will it eventually be in q_2?"", ""uppaal_query"": ""s.s.q_12 --> s.s.q_2""",verification
Does a path where the system stays in state q_3 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_3 forever exist?"", ""uppaal_query"": ""E[] s.s.q_3""",verification
Verify if the automaton reaches the states q_1 and q_8.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_1 and q_8."", ""uppaal_query"": ""E<> (s.s.q_1 && s.s.q_8)""",verification
"If the system reaches q_4, will it eventually be in q_10?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_4, will it eventually be in q_10?"", ""uppaal_query"": ""s.s.q_4 --> s.s.q_10""",verification
Check if state q_2 is reachable within 35 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_2 is reachable within 35 time units."", ""uppaal_query"": ""E<> s.s.q_2 && s.x <= 35""",verification
Does a path where state q_10 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_10 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_10""",verification
Verify if the automaton can always stay in state q_7 for up to 10 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_7 for up to 10 time units."", ""uppaal_query"": ""A[] s.s.q_7 && s.x <= 10""",verification
Does a path where the system stays in state q_6 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_6 forever exist?"", ""uppaal_query"": ""E[] s.s.q_6""",verification
Does the system will always eventually reach state q_2.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_2."", ""uppaal_query"": ""A<> s.s.q_2""",verification
"If the system reaches q_2, will it eventually be in q_7?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_2, will it eventually be in q_7?"", ""uppaal_query"": ""s.s.q_2 --> s.s.q_7""",verification
Does the system will always eventually reach state q_4.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_4."", ""uppaal_query"": ""A<> s.s.q_4""",verification
Does a path where state q_11 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_11 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_11""",verification
"If the system reaches q_4, will it eventually be in q_6?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_4, will it eventually be in q_6?"", ""uppaal_query"": ""s.s.q_4 --> s.s.q_6""",verification
Verify if the automaton can always stay in state q_6 for up to 45 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_6 for up to 45 time units."", ""uppaal_query"": ""A[] s.s.q_6 && s.x <= 45""",verification
Check if state q_2 is reachable within 40 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_2 is reachable within 40 time units."", ""uppaal_query"": ""E<> s.s.q_2 && s.x <= 40""",verification
Does a path where state q_7 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_7 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_7""",verification
Verify if the automaton can always stay in state q_14 for up to 40 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_14 for up to 40 time units."", ""uppaal_query"": ""A[] s.s.q_14 && s.x <= 40""",verification
Verify if the automaton can always stay in state q_9 for up to 30 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_9 for up to 30 time units."", ""uppaal_query"": ""A[] s.s.q_9 && s.x <= 30""",verification
Does a path where state q_2 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_2 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_2""",verification
"If the system reaches q_3, will it eventually be in q_9?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_3, will it eventually be in q_9?"", ""uppaal_query"": ""s.s.q_3 --> s.s.q_9""",verification
Does the system will always eventually reach state q_5.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_5."", ""uppaal_query"": ""A<> s.s.q_5""",verification
Verify if the automaton reaches the states q_10 and q_5.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_10 and q_5."", ""uppaal_query"": ""E<> (s.s.q_10 && s.s.q_5)""",verification
"If the system reaches q_6, will it eventually be in q_10?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_6, will it eventually be in q_10?"", ""uppaal_query"": ""s.s.q_6 --> s.s.q_10""",verification
Check if state q_12 is reachable within 25 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_12 is reachable within 25 time units."", ""uppaal_query"": ""E<> s.s.q_12 && s.x <= 25""",verification
Verify if the automaton reaches the states q_10 and q_5.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_10 and q_5."", ""uppaal_query"": ""E<> (s.s.q_10 && s.s.q_5)""",verification
Does the system will always eventually reach state q_9.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_9."", ""uppaal_query"": ""A<> s.s.q_9""",verification
Verify if the automaton can always stay in state q_12 for up to 20 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_12 for up to 20 time units."", ""uppaal_query"": ""A[] s.s.q_12 && s.x <= 20""",verification
Does the system will always eventually reach state q_2.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_2."", ""uppaal_query"": ""A<> s.s.q_2""",verification
Does the system will always eventually reach state q_6.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_6."", ""uppaal_query"": ""A<> s.s.q_6""",verification
Does a path where state q_9 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_9 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_9""",verification
Does a path where the system stays in state q_11 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_11 forever exist?"", ""uppaal_query"": ""E[] s.s.q_11""",verification
Does the system will always eventually reach state q_0.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_0."", ""uppaal_query"": ""A<> s.s.q_0""",verification
Verify if the automaton can always stay in state q_9 for up to 20 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_9 for up to 20 time units."", ""uppaal_query"": ""A[] s.s.q_9 && s.x <= 20""",verification
Verify if the automaton can always stay in state q_4 for up to 40 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_4 for up to 40 time units."", ""uppaal_query"": ""A[] s.s.q_4 && s.x <= 40""",verification
Does a path where state q_4 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_4 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_4""",verification
Verify if the automaton reaches the states q_0 and q_10.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_0 and q_10."", ""uppaal_query"": ""E<> (s.s.q_0 && s.s.q_10)""",verification
Verify if the automaton can always stay in state q_5 for up to 20 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_5 for up to 20 time units."", ""uppaal_query"": ""A[] s.s.q_5 && s.x <= 20""",verification
Does a path where state q_8 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_8 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_8""",verification
Does the system will always eventually reach state q_6.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_6."", ""uppaal_query"": ""A<> s.s.q_6""",verification
Does a path where the system stays in state q_14 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_14 forever exist?"", ""uppaal_query"": ""E[] s.s.q_14""",verification
Does a path where state q_11 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_11 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_11""",verification
"If the system reaches q_3, will it eventually be in q_1?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_3, will it eventually be in q_1?"", ""uppaal_query"": ""s.s.q_3 --> s.s.q_1""",verification
Verify if the automaton reaches the states q_5 and q_8.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_5 and q_8."", ""uppaal_query"": ""E<> (s.s.q_5 && s.s.q_8)""",verification
Verify if the automaton can always stay in state q_3 for up to 40 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_3 for up to 40 time units."", ""uppaal_query"": ""A[] s.s.q_3 && s.x <= 40""",verification
Verify if the automaton can always stay in state q_14 for up to 10 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_14 for up to 10 time units."", ""uppaal_query"": ""A[] s.s.q_14 && s.x <= 10""",verification
Verify if the automaton reaches the states q_4 and q_5.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_4 and q_5."", ""uppaal_query"": ""E<> (s.s.q_4 && s.s.q_5)""",verification
Verify if the automaton can always stay in state q_4 for up to 50 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_4 for up to 50 time units."", ""uppaal_query"": ""A[] s.s.q_4 && s.x <= 50""",verification
Does a path where the system stays in state q_13 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_13 forever exist?"", ""uppaal_query"": ""E[] s.s.q_13""",verification
Does a path where state q_14 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_14 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_14""",verification
Verify if the automaton reaches the states q_13 and q_7.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_13 and q_7."", ""uppaal_query"": ""E<> (s.s.q_13 && s.s.q_7)""",verification
Check if state q_9 is reachable within 15 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_9 is reachable within 15 time units."", ""uppaal_query"": ""E<> s.s.q_9 && s.x <= 15""",verification
Verify if the automaton can always stay in state q_11 for up to 45 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_11 for up to 45 time units."", ""uppaal_query"": ""A[] s.s.q_11 && s.x <= 45""",verification
Does the system will always eventually reach state q_3.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_3."", ""uppaal_query"": ""A<> s.s.q_3""",verification
Verify if the automaton can always stay in state q_10 for up to 45 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_10 for up to 45 time units."", ""uppaal_query"": ""A[] s.s.q_10 && s.x <= 45""",verification
Does the system will always eventually reach state q_3.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_3."", ""uppaal_query"": ""A<> s.s.q_3""",verification
Check if state q_8 is reachable within 25 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_8 is reachable within 25 time units."", ""uppaal_query"": ""E<> s.s.q_8 && s.x <= 25""",verification
Does the system will always eventually reach state q_3.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_3."", ""uppaal_query"": ""A<> s.s.q_3""",verification
"If the system reaches q_1, will it eventually be in q_9?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_1, will it eventually be in q_9?"", ""uppaal_query"": ""s.s.q_1 --> s.s.q_9""",verification
Verify if the automaton can always stay in state q_5 for up to 40 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_5 for up to 40 time units."", ""uppaal_query"": ""A[] s.s.q_5 && s.x <= 40""",verification
Check if state q_10 is reachable within 35 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_10 is reachable within 35 time units."", ""uppaal_query"": ""E<> s.s.q_10 && s.x <= 35""",verification
Verify if the automaton reaches the states q_5 and q_0.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_5 and q_0."", ""uppaal_query"": ""E<> (s.s.q_5 && s.s.q_0)""",verification
Does the system will always eventually reach state q_12.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_12."", ""uppaal_query"": ""A<> s.s.q_12""",verification
Verify if the automaton can always stay in state q_12 for up to 40 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_12 for up to 40 time units."", ""uppaal_query"": ""A[] s.s.q_12 && s.x <= 40""",verification
Does the system will always eventually reach state q_2.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_2."", ""uppaal_query"": ""A<> s.s.q_2""",verification
Check if state q_9 is reachable within 15 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_9 is reachable within 15 time units."", ""uppaal_query"": ""E<> s.s.q_9 && s.x <= 15""",verification
Does the system will always eventually reach state q_8.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_8."", ""uppaal_query"": ""A<> s.s.q_8""",verification
Verify if the automaton can always stay in state q_6 for up to 30 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_6 for up to 30 time units."", ""uppaal_query"": ""A[] s.s.q_6 && s.x <= 30""",verification
Check if state q_11 is reachable within 15 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_11 is reachable within 15 time units."", ""uppaal_query"": ""E<> s.s.q_11 && s.x <= 15""",verification
Check if state q_11 is reachable within 50 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_11 is reachable within 50 time units."", ""uppaal_query"": ""E<> s.s.q_11 && s.x <= 50""",verification
Does a path where state q_12 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_12 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_12""",verification
Does a path where the system stays in state q_8 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_8 forever exist?"", ""uppaal_query"": ""E[] s.s.q_8""",verification
Does a path where state q_8 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_8 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_8""",verification
Does a path where the system stays in state q_12 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_12 forever exist?"", ""uppaal_query"": ""E[] s.s.q_12""",verification
Does the system will always eventually reach state q_9.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_9."", ""uppaal_query"": ""A<> s.s.q_9""",verification
Does the system will always eventually reach state q_13.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_13."", ""uppaal_query"": ""A<> s.s.q_13""",verification
Check if state q_10 is reachable within 25 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_10 is reachable within 25 time units."", ""uppaal_query"": ""E<> s.s.q_10 && s.x <= 25""",verification
Does the system will always eventually reach state q_6.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_6."", ""uppaal_query"": ""A<> s.s.q_6""",verification
Verify if the automaton reaches the states q_9 and q_7.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_9 and q_7."", ""uppaal_query"": ""E<> (s.s.q_9 && s.s.q_7)""",verification
"If the system reaches q_6, will it eventually be in q_12?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_6, will it eventually be in q_12?"", ""uppaal_query"": ""s.s.q_6 --> s.s.q_12""",verification
Verify if the automaton reaches the states q_14 and q_11.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_14 and q_11."", ""uppaal_query"": ""E<> (s.s.q_14 && s.s.q_11)""",verification
Verify if the automaton can always stay in state q_2 for up to 50 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_2 for up to 50 time units."", ""uppaal_query"": ""A[] s.s.q_2 && s.x <= 50""",verification
Check if state q_5 is reachable within 40 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_5 is reachable within 40 time units."", ""uppaal_query"": ""E<> s.s.q_5 && s.x <= 40""",verification
Verify if the automaton can always stay in state q_6 for up to 10 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_6 for up to 10 time units."", ""uppaal_query"": ""A[] s.s.q_6 && s.x <= 10""",verification
Verify if the automaton reaches the states q_14 and q_9.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_14 and q_9."", ""uppaal_query"": ""E<> (s.s.q_14 && s.s.q_9)""",verification
"If the system reaches q_6, will it eventually be in q_9?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_6, will it eventually be in q_9?"", ""uppaal_query"": ""s.s.q_6 --> s.s.q_9""",verification
"If the system reaches q_10, will it eventually be in q_2?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_10, will it eventually be in q_2?"", ""uppaal_query"": ""s.s.q_10 --> s.s.q_2""",verification
Verify if the automaton can always stay in state q_10 for up to 30 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_10 for up to 30 time units."", ""uppaal_query"": ""A[] s.s.q_10 && s.x <= 30""",verification
Does a path where the system stays in state q_4 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_4 forever exist?"", ""uppaal_query"": ""E[] s.s.q_4""",verification
Verify if the automaton reaches the states q_12 and q_13.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_12 and q_13."", ""uppaal_query"": ""E<> (s.s.q_12 && s.s.q_13)""",verification
Does a path where state q_9 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_9 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_9""",verification
Does the system will always eventually reach state q_5.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_5."", ""uppaal_query"": ""A<> s.s.q_5""",verification
Verify if the automaton reaches the states q_14 and q_8.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_14 and q_8."", ""uppaal_query"": ""E<> (s.s.q_14 && s.s.q_8)""",verification
Verify if the automaton reaches the states q_11 and q_6.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_11 and q_6."", ""uppaal_query"": ""E<> (s.s.q_11 && s.s.q_6)""",verification
"If the system reaches q_8, will it eventually be in q_12?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_8, will it eventually be in q_12?"", ""uppaal_query"": ""s.s.q_8 --> s.s.q_12""",verification
"If the system reaches q_8, will it eventually be in q_0?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_8, will it eventually be in q_0?"", ""uppaal_query"": ""s.s.q_8 --> s.s.q_0""",verification
Does the system will always eventually reach state q_4.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_4."", ""uppaal_query"": ""A<> s.s.q_4""",verification
"If the system reaches q_14, will it eventually be in q_9?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_14, will it eventually be in q_9?"", ""uppaal_query"": ""s.s.q_14 --> s.s.q_9""",verification
Does a path where the system stays in state q_14 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_14 forever exist?"", ""uppaal_query"": ""E[] s.s.q_14""",verification
Verify if the automaton can always stay in state q_3 for up to 35 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_3 for up to 35 time units."", ""uppaal_query"": ""A[] s.s.q_3 && s.x <= 35""",verification
Verify if the automaton can always stay in state q_13 for up to 30 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_13 for up to 30 time units."", ""uppaal_query"": ""A[] s.s.q_13 && s.x <= 30""",verification
Does the system will always eventually reach state q_11.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_11."", ""uppaal_query"": ""A<> s.s.q_11""",verification
Verify if the automaton can always stay in state q_3 for up to 50 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_3 for up to 50 time units."", ""uppaal_query"": ""A[] s.s.q_3 && s.x <= 50""",verification
Verify if the automaton reaches the states q_5 and q_1.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_5 and q_1."", ""uppaal_query"": ""E<> (s.s.q_5 && s.s.q_1)""",verification
Does a path where the system stays in state q_5 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_5 forever exist?"", ""uppaal_query"": ""E[] s.s.q_5""",verification
Does a path where the system stays in state q_2 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_2 forever exist?"", ""uppaal_query"": ""E[] s.s.q_2""",verification
"If the system reaches q_0, will it eventually be in q_5?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_0, will it eventually be in q_5?"", ""uppaal_query"": ""s.s.q_0 --> s.s.q_5""",verification
Does a path where the system stays in state q_6 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_6 forever exist?"", ""uppaal_query"": ""E[] s.s.q_6""",verification
Verify if the automaton can always stay in state q_8 for up to 20 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_8 for up to 20 time units."", ""uppaal_query"": ""A[] s.s.q_8 && s.x <= 20""",verification
Verify if the automaton reaches the states q_8 and q_13.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_8 and q_13."", ""uppaal_query"": ""E<> (s.s.q_8 && s.s.q_13)""",verification
Does the system will always eventually reach state q_4.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_4."", ""uppaal_query"": ""A<> s.s.q_4""",verification
"If the system reaches q_8, will it eventually be in q_0?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_8, will it eventually be in q_0?"", ""uppaal_query"": ""s.s.q_8 --> s.s.q_0""",verification
Does a path where state q_9 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_9 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_9""",verification
Verify if the automaton reaches the states q_7 and q_8.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_7 and q_8."", ""uppaal_query"": ""E<> (s.s.q_7 && s.s.q_8)""",verification
Verify if the automaton reaches the states q_10 and q_1.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_10 and q_1."", ""uppaal_query"": ""E<> (s.s.q_10 && s.s.q_1)""",verification
Does a path where the system stays in state q_1 forever exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where the system stays in state q_1 forever exist?"", ""uppaal_query"": ""E[] s.s.q_1""",verification
Does the system will always eventually reach state q_4.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_4."", ""uppaal_query"": ""A<> s.s.q_4""",verification
Does the system will always eventually reach state q_7.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_7."", ""uppaal_query"": ""A<> s.s.q_7""",verification
"If the system reaches q_10, will it eventually be in q_6?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_10, will it eventually be in q_6?"", ""uppaal_query"": ""s.s.q_10 --> s.s.q_6""",verification
Check if state q_7 is reachable within 50 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_7 is reachable within 50 time units."", ""uppaal_query"": ""E<> s.s.q_7 && s.x <= 50""",verification
"If the system reaches q_4, will it eventually be in q_13?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_4, will it eventually be in q_13?"", ""uppaal_query"": ""s.s.q_4 --> s.s.q_13""",verification
Verify if the automaton can always stay in state q_9 for up to 20 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_9 for up to 20 time units."", ""uppaal_query"": ""A[] s.s.q_9 && s.x <= 20""",verification
Check if state q_9 is reachable within 45 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_9 is reachable within 45 time units."", ""uppaal_query"": ""E<> s.s.q_9 && s.x <= 45""",verification
Verify if the automaton can always stay in state q_1 for up to 20 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_1 for up to 20 time units."", ""uppaal_query"": ""A[] s.s.q_1 && s.x <= 20""",verification
"If the system reaches q_5, will it eventually be in q_9?","""task"": ""verification"", ""query_nl"": ""If the system reaches q_5, will it eventually be in q_9?"", ""uppaal_query"": ""s.s.q_5 --> s.s.q_9""",verification
Does the system will always eventually reach state q_6.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_6."", ""uppaal_query"": ""A<> s.s.q_6""",verification
Does the system will always eventually reach state q_9.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_9."", ""uppaal_query"": ""A<> s.s.q_9""",verification
Check if state q_6 is reachable within 50 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_6 is reachable within 50 time units."", ""uppaal_query"": ""E<> s.s.q_6 && s.x <= 50""",verification
Check if state q_10 is reachable within 50 time units.,"""task"": ""verification"", ""query_nl"": ""Check if state q_10 is reachable within 50 time units."", ""uppaal_query"": ""E<> s.s.q_10 && s.x <= 50""",verification
Does a path where state q_0 is reached exist?,"""task"": ""verification"", ""query_nl"": ""Does a path where state q_0 is reached exist?"", ""uppaal_query"": ""E<> s.s.q_0""",verification
Does the system will always eventually reach state q_7.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_7."", ""uppaal_query"": ""A<> s.s.q_7""",verification
Does the system will always eventually reach state q_0.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_0."", ""uppaal_query"": ""A<> s.s.q_0""",verification
Verify if the automaton reaches the states q_14 and q_3.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton reaches the states q_14 and q_3."", ""uppaal_query"": ""E<> (s.s.q_14 && s.s.q_3)""",verification
Verify if the automaton can always stay in state q_1 for up to 45 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_1 for up to 45 time units."", ""uppaal_query"": ""A[] s.s.q_1 && s.x <= 45""",verification
Does the system will always eventually reach state q_5.,"""task"": ""verification"", ""query_nl"": ""Does the system will always eventually reach state q_5."", ""uppaal_query"": ""A<> s.s.q_5""",verification
Verify if the automaton can always stay in state q_10 for up to 20 time units.,"""task"": ""verification"", ""query_nl"": ""Verify if the automaton can always stay in state q_10 for up to 20 time units."", ""uppaal_query"": ""A[] s.s.q_10 && s.x <= 20""",verification
